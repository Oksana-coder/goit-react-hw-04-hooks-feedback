{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","components/Container/Container.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","type","onClick","protoTypes","PropTypes","string","isRequired","func","Statistics","good","neutral","bad","total","positivePercentage","protoType","number","Section","title","children","node","Notification","message","Container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Object","keys","prevState","totalFeedback","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAIMA,EAAkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACpB,qBAAKC,UAAU,mBAAf,SACKF,EAAQG,KAAK,SAAAC,GAAM,OAClB,wBACEC,KAAK,SACLH,UAAU,sBAEVI,QAAS,kBAAML,EAAgBG,IAJjC,SAKEA,GAFKA,SAOjBL,EAAgBQ,WAAa,CAC3BH,OAAQI,IAAUC,OAAOC,WACzBT,gBAAiBO,IAAUG,KAAKD,YAGnBX,QCnBTa,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,SAI5BL,EAAWM,UAAY,CACrBL,KAAML,IAAUW,OAAOT,WACvBI,QAASN,IAAUW,OAAOT,WAC1BK,IAAKP,IAAUW,OAAOT,WACtBM,MAAOR,IAAUG,KAAKD,WACtBO,mBAAoBT,IAAUC,OAAOC,YAGxBE,QClBTQ,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,qCACA,6BAAKD,IACAC,MAIPF,EAAQb,WAAa,CACnBc,MAAOb,IAAUC,OAAOC,WACxBY,SAAUd,IAAUe,KAAKb,YAGZU,QCZTI,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,4BAAIA,KAGND,EAAaN,UAAY,CACvBO,QAASjB,IAAUC,OAAOC,YAGbc,QCNAE,G,MAFG,SAAC,GAAD,IAAGJ,EAAH,EAAGA,SAAH,OAAkB,qBAAKpB,UAAU,YAAf,SAA4BoB,M,MCKjD,SAASK,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAqBMC,EAAqB,WACzB,OAAOnB,EAAOC,EAAUC,GAQxB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACErB,QAASiC,OAAOC,KAAK,CAAErB,OAAMC,UAASC,QACtCd,gBAjCa,SAACI,GACtB,OAAQA,GACN,IAAK,OACHwB,GAAQ,SAAAM,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHL,GAAW,SAAAK,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHJ,GAAO,SAAAI,GAAS,OAAIA,EAAY,KAChC,MAEF,QACE,aAqBA,cAAC,EAAD,CAASd,MAAM,aAAf,SACGW,KAAwB,EACvB,cAAC,EAAD,CACEnB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,IACPf,mBAA6B,IAATJ,EAAa,KApBL,WACtC,IAAMuB,EAAgBJ,IACtB,OAAOK,KAAKC,MAAMzB,EAAKuB,EAAgB,KAkBWG,GAAkC,MAE5E,cAAC,EAAD,CAAcd,QAAQ,2B,MCpDlCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b4ce19a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n    <div className=\"feedback-options\">\n        {options.map( option => (\n          <button\n            type=\"button\"\n            className=\"feedback-option-btn\"\n            key={option}\n            onClick={() => onLeaveFeedback(option)}\n          >{option}</button>\n        ))}\n    </div>\n);\n\nFeedbackOptions.protoTypes = {\n  option: PropTypes.string.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}</li>\n  </ul>\n);\n\nStatistics.protoType = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n  <h2>{title}</h2>\n      {children}\n  </>\n);\n\nSection.protoTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <p>{message}</p>\n);\n\nNotification.protoType = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;","import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;","import { useState } from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Section from \"./components/Section\";\nimport Notification from \"./components/Notification\";\nimport Container from './components/Container';\nimport './App.scss';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  \n  const handleFeedback = (type) => {\n    switch (type) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n      \n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n      \n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  }\n\n  const countPositiveFeedbackPercentage = () => {\n    const totalFeedback = countTotalFeedback();\n    return Math.round(good/totalFeedback * 100);\n  }\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys({ good, neutral, bad })}\n            onLeaveFeedback={handleFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {countTotalFeedback() >= 1 ?\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={good === 0 ? '0%' : countPositiveFeedbackPercentage()+'%'} />\n            :\n            <Notification message=\"No feedback given\" />}\n        </Section>\n      </Container>\n    )\n  }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}